# Generated by Django 4.2.7 on 2023-11-22 20:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Nivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombreNivel', models.CharField(max_length=100)),
                ('descripcionNivel', models.CharField(max_length=500)),
                ('puntosRequeridos', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[(1, 'Textual'), (2, 'Numerica'), (3, 'Opcion Multiple')], max_length=50)),
                ('contenido_pregunta', models.CharField(max_length=500)),
                ('puntos_para_pregunta', models.IntegerField()),
                ('nivel_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preguntas', to='api.nivel')),
            ],
        ),
        migrations.CreateModel(
            name='Respuesta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenido_respuesta', models.CharField(max_length=500)),
                ('es_correcta', models.BooleanField(default=False)),
                ('pregunta_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuestas_pregunta', to='api.pregunta')),
                ('usuario_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuestas_usuario', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Puntos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_puntos', models.IntegerField()),
                ('fecha_ganado', models.DateTimeField(auto_now_add=True)),
                ('pregunta_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='puntos_pregunta', to='api.pregunta')),
                ('usuario_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='puntos_usuario', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OpcionesPregunta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenido_opcion', models.CharField(max_length=50)),
                ('es_correcta', models.BooleanField(default=False)),
                ('pregunta_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opciones_pregunta', to='api.pregunta')),
            ],
        ),
        migrations.CreateModel(
            name='Logro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_logro', models.CharField(max_length=100)),
                ('descripcion_logro', models.CharField(max_length=500)),
                ('usuario_logro', models.ManyToManyField(blank=True, related_name='logros', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Estatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_estatus', models.CharField(max_length=50)),
                ('puntos_requeridos', models.IntegerField()),
                ('usuario_estatus', models.ManyToManyField(blank=True, related_name='estatus', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
